#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hamscoffee.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HamscoffeeDB")]
	public partial class HamscoffeeDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertAccout_admin(Accout_admin instance);
    partial void UpdateAccout_admin(Accout_admin instance);
    partial void DeleteAccout_admin(Accout_admin instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertCatagory(Catagory instance);
    partial void UpdateCatagory(Catagory instance);
    partial void DeleteCatagory(Catagory instance);
    partial void InsertColection_Page(Colection_Page instance);
    partial void UpdateColection_Page(Colection_Page instance);
    partial void DeleteColection_Page(Colection_Page instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomer_Acc(Customer_Acc instance);
    partial void UpdateCustomer_Acc(Customer_Acc instance);
    partial void DeleteCustomer_Acc(Customer_Acc instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertDetail_Import_Bill(Detail_Import_Bill instance);
    partial void UpdateDetail_Import_Bill(Detail_Import_Bill instance);
    partial void DeleteDetail_Import_Bill(Detail_Import_Bill instance);
    partial void InsertDetails_Bill(Details_Bill instance);
    partial void UpdateDetails_Bill(Details_Bill instance);
    partial void DeleteDetails_Bill(Details_Bill instance);
    partial void InsertGif(Gif instance);
    partial void UpdateGif(Gif instance);
    partial void DeleteGif(Gif instance);
    partial void InsertImage_store(Image_store instance);
    partial void UpdateImage_store(Image_store instance);
    partial void DeleteImage_store(Image_store instance);
    partial void InsertImport_Bill(Import_Bill instance);
    partial void UpdateImport_Bill(Import_Bill instance);
    partial void DeleteImport_Bill(Import_Bill instance);
    partial void InsertInfo(Info instance);
    partial void UpdateInfo(Info instance);
    partial void DeleteInfo(Info instance);
    partial void InsertLogo(Logo instance);
    partial void UpdateLogo(Logo instance);
    partial void DeleteLogo(Logo instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertProvider(Provider instance);
    partial void UpdateProvider(Provider instance);
    partial void DeleteProvider(Provider instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertSlider(Slider instance);
    partial void UpdateSlider(Slider instance);
    partial void DeleteSlider(Slider instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStyle(Style instance);
    partial void UpdateStyle(Style instance);
    partial void DeleteStyle(Style instance);
    #endregion
		
		public HamscoffeeDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HamscoffeeDBConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HamscoffeeDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HamscoffeeDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HamscoffeeDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HamscoffeeDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account_vip> Account_vips
		{
			get
			{
				return this.GetTable<Account_vip>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<Accout_admin> Accout_admins
		{
			get
			{
				return this.GetTable<Accout_admin>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Catagory> Catagories
		{
			get
			{
				return this.GetTable<Catagory>();
			}
		}
		
		public System.Data.Linq.Table<Colection_Page> Colection_Pages
		{
			get
			{
				return this.GetTable<Colection_Page>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Acc> Customer_Accs
		{
			get
			{
				return this.GetTable<Customer_Acc>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Deliveries
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<Detail_Import_Bill> Detail_Import_Bills
		{
			get
			{
				return this.GetTable<Detail_Import_Bill>();
			}
		}
		
		public System.Data.Linq.Table<Details_Bill> Details_Bills
		{
			get
			{
				return this.GetTable<Details_Bill>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Footer> Footers
		{
			get
			{
				return this.GetTable<Footer>();
			}
		}
		
		public System.Data.Linq.Table<Gif> Gifs
		{
			get
			{
				return this.GetTable<Gif>();
			}
		}
		
		public System.Data.Linq.Table<Image_store> Image_stores
		{
			get
			{
				return this.GetTable<Image_store>();
			}
		}
		
		public System.Data.Linq.Table<Import_Bill> Import_Bills
		{
			get
			{
				return this.GetTable<Import_Bill>();
			}
		}
		
		public System.Data.Linq.Table<Info> Infos
		{
			get
			{
				return this.GetTable<Info>();
			}
		}
		
		public System.Data.Linq.Table<Logo> Logos
		{
			get
			{
				return this.GetTable<Logo>();
			}
		}
		
		public System.Data.Linq.Table<Policy_delivery> Policy_deliveries
		{
			get
			{
				return this.GetTable<Policy_delivery>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<Provider> Providers
		{
			get
			{
				return this.GetTable<Provider>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<Slider> Sliders
		{
			get
			{
				return this.GetTable<Slider>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Style> Styles
		{
			get
			{
				return this.GetTable<Style>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account_vip")]
	public partial class Account_vip
	{
		
		private string _Policy_vip;
		
		public Account_vip()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Policy_vip", DbType="NVarChar(500)")]
		public string Policy_vip
		{
			get
			{
				return this._Policy_vip;
			}
			set
			{
				if ((this._Policy_vip != value))
				{
					this._Policy_vip = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Unit_ID;
		
		private string _NameUnit;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnit_IDChanging(int value);
    partial void OnUnit_IDChanged();
    partial void OnNameUnitChanging(string value);
    partial void OnNameUnitChanged();
    #endregion
		
		public Unit()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Unit_ID
		{
			get
			{
				return this._Unit_ID;
			}
			set
			{
				if ((this._Unit_ID != value))
				{
					this.OnUnit_IDChanging(value);
					this.SendPropertyChanging();
					this._Unit_ID = value;
					this.SendPropertyChanged("Unit_ID");
					this.OnUnit_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameUnit", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string NameUnit
		{
			get
			{
				return this._NameUnit;
			}
			set
			{
				if ((this._NameUnit != value))
				{
					this.OnNameUnitChanging(value);
					this.SendPropertyChanging();
					this._NameUnit = value;
					this.SendPropertyChanged("NameUnit");
					this.OnNameUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Products", ThisKey="Unit_ID", OtherKey="Unit_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accout_admin")]
	public partial class Accout_admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDAdmin;
		
		private string _Pass_admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAdminChanging(string value);
    partial void OnIDAdminChanged();
    partial void OnPass_adminChanging(string value);
    partial void OnPass_adminChanged();
    #endregion
		
		public Accout_admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdmin", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDAdmin
		{
			get
			{
				return this._IDAdmin;
			}
			set
			{
				if ((this._IDAdmin != value))
				{
					this.OnIDAdminChanging(value);
					this.SendPropertyChanging();
					this._IDAdmin = value;
					this.SendPropertyChanged("IDAdmin");
					this.OnIDAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass_admin", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Pass_admin
		{
			get
			{
				return this._Pass_admin;
			}
			set
			{
				if ((this._Pass_admin != value))
				{
					this.OnPass_adminChanging(value);
					this.SendPropertyChanging();
					this._Pass_admin = value;
					this.SendPropertyChanged("Pass_admin");
					this.OnPass_adminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bill_ID;
		
		private System.DateTime _Date;
		
		private decimal _Total;
		
		private int _Customer_ID;
		
		private EntitySet<Delivery> _Deliveries;
		
		private EntitySet<Details_Bill> _Details_Bills;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBill_IDChanging(int value);
    partial void OnBill_IDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    #endregion
		
		public Bill()
		{
			this._Deliveries = new EntitySet<Delivery>(new Action<Delivery>(this.attach_Deliveries), new Action<Delivery>(this.detach_Deliveries));
			this._Details_Bills = new EntitySet<Details_Bill>(new Action<Details_Bill>(this.attach_Details_Bills), new Action<Details_Bill>(this.detach_Details_Bills));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="Int NOT NULL")]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Delivery", Storage="_Deliveries", ThisKey="Bill_ID", OtherKey="Bill_ID")]
		public EntitySet<Delivery> Deliveries
		{
			get
			{
				return this._Deliveries;
			}
			set
			{
				this._Deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Details_Bill", Storage="_Details_Bills", ThisKey="Bill_ID", OtherKey="Bill_ID")]
		public EntitySet<Details_Bill> Details_Bills
		{
			get
			{
				return this._Details_Bills;
			}
			set
			{
				this._Details_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Customer", ThisKey="Customer_ID", OtherKey="Customer_ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._Customer_ID = value.Customer_ID;
					}
					else
					{
						this._Customer_ID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Deliveries(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_Deliveries(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
		
		private void attach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catagory")]
	public partial class Catagory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Catagory_ID;
		
		private string _Catagory_Name;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Style> _Styles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatagory_IDChanging(string value);
    partial void OnCatagory_IDChanged();
    partial void OnCatagory_NameChanging(string value);
    partial void OnCatagory_NameChanged();
    #endregion
		
		public Catagory()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Styles = new EntitySet<Style>(new Action<Style>(this.attach_Styles), new Action<Style>(this.detach_Styles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catagory_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Catagory_ID
		{
			get
			{
				return this._Catagory_ID;
			}
			set
			{
				if ((this._Catagory_ID != value))
				{
					this.OnCatagory_IDChanging(value);
					this.SendPropertyChanging();
					this._Catagory_ID = value;
					this.SendPropertyChanged("Catagory_ID");
					this.OnCatagory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catagory_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Catagory_Name
		{
			get
			{
				return this._Catagory_Name;
			}
			set
			{
				if ((this._Catagory_Name != value))
				{
					this.OnCatagory_NameChanging(value);
					this.SendPropertyChanging();
					this._Catagory_Name = value;
					this.SendPropertyChanged("Catagory_Name");
					this.OnCatagory_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catagory_Product", Storage="_Products", ThisKey="Catagory_ID", OtherKey="Catagory_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catagory_Style", Storage="_Styles", ThisKey="Catagory_ID", OtherKey="Catagory_ID")]
		public EntitySet<Style> Styles
		{
			get
			{
				return this._Styles;
			}
			set
			{
				this._Styles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Catagory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Catagory = null;
		}
		
		private void attach_Styles(Style entity)
		{
			this.SendPropertyChanging();
			entity.Catagory = this;
		}
		
		private void detach_Styles(Style entity)
		{
			this.SendPropertyChanging();
			entity.Catagory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colection_Pages")]
	public partial class Colection_Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Page_Name;
		
		private string _Link;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPage_NameChanging(string value);
    partial void OnPage_NameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public Colection_Page()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Page_Name
		{
			get
			{
				return this._Page_Name;
			}
			set
			{
				if ((this._Page_Name != value))
				{
					this.OnPage_NameChanging(value);
					this.SendPropertyChanging();
					this._Page_Name = value;
					this.SendPropertyChanged("Page_Name");
					this.OnPage_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Customer_ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Mail;
		
		private string _Sex;
		
		private EntitySet<Bill> _Bills;
		
		private EntitySet<Customer_Acc> _Customer_Accs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    #endregion
		
		public Customer()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Customer_Accs = new EntitySet<Customer_Acc>(new Action<Customer_Acc>(this.attach_Customer_Accs), new Action<Customer_Acc>(this.detach_Customer_Accs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NChar(5)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Bills", ThisKey="Customer_ID", OtherKey="Customer_ID")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Acc", Storage="_Customer_Accs", ThisKey="Customer_ID", OtherKey="Customer_ID")]
		public EntitySet<Customer_Acc> Customer_Accs
		{
			get
			{
				return this._Customer_Accs;
			}
			set
			{
				this._Customer_Accs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Customer_Accs(Customer_Acc entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Customer_Accs(Customer_Acc entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Acc")]
	public partial class Customer_Acc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User;
		
		private int _Customer_ID;
		
		private string _Pass;
		
		private System.Nullable<int> _Point;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnPointChanging(System.Nullable<int> value);
    partial void OnPointChanged();
    #endregion
		
		public Customer_Acc()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="Int NOT NULL")]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Acc", Storage="_Customer", ThisKey="Customer_ID", OtherKey="Customer_ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Accs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Accs.Add(this);
						this._Customer_ID = value.Customer_ID;
					}
					else
					{
						this._Customer_ID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delivery")]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Delivery_id;
		
		private string _Staff_ID;
		
		private int _Bill_ID;
		
		private string _Status;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelivery_idChanging(int value);
    partial void OnDelivery_idChanged();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnBill_IDChanging(int value);
    partial void OnBill_IDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Delivery()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Delivery_id
		{
			get
			{
				return this._Delivery_id;
			}
			set
			{
				if ((this._Delivery_id != value))
				{
					this.OnDelivery_idChanging(value);
					this.SendPropertyChanging();
					this._Delivery_id = value;
					this.SendPropertyChanged("Delivery_id");
					this.OnDelivery_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_ID", DbType="Int NOT NULL")]
		public int Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Delivery", Storage="_Bill", ThisKey="Bill_ID", OtherKey="Bill_ID", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.Deliveries.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.Deliveries.Add(this);
						this._Bill_ID = value.Bill_ID;
					}
					else
					{
						this._Bill_ID = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Delivery", Storage="_Staff", ThisKey="Staff_ID", OtherKey="Staff_ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Deliveries.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Deliveries.Add(this);
						this._Staff_ID = value.Staff_ID;
					}
					else
					{
						this._Staff_ID = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detail_Import_Bill")]
	public partial class Detail_Import_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bill_ID;
		
		private string _Product_ID;
		
		private int _Quantity;
		
		private decimal _TotalDetail;
		
		private EntityRef<Import_Bill> _Import_Bill;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBill_IDChanging(int value);
    partial void OnBill_IDChanged();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotalDetailChanging(decimal value);
    partial void OnTotalDetailChanged();
    #endregion
		
		public Detail_Import_Bill()
		{
			this._Import_Bill = default(EntityRef<Import_Bill>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					if (this._Import_Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDetail", DbType="Money NOT NULL")]
		public decimal TotalDetail
		{
			get
			{
				return this._TotalDetail;
			}
			set
			{
				if ((this._TotalDetail != value))
				{
					this.OnTotalDetailChanging(value);
					this.SendPropertyChanging();
					this._TotalDetail = value;
					this.SendPropertyChanged("TotalDetail");
					this.OnTotalDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Import_Bill_Detail_Import_Bill", Storage="_Import_Bill", ThisKey="Bill_ID", OtherKey="Bill_ID", IsForeignKey=true)]
		public Import_Bill Import_Bill
		{
			get
			{
				return this._Import_Bill.Entity;
			}
			set
			{
				Import_Bill previousValue = this._Import_Bill.Entity;
				if (((previousValue != value) 
							|| (this._Import_Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Import_Bill.Entity = null;
						previousValue.Detail_Import_Bills.Remove(this);
					}
					this._Import_Bill.Entity = value;
					if ((value != null))
					{
						value.Detail_Import_Bills.Add(this);
						this._Bill_ID = value.Bill_ID;
					}
					else
					{
						this._Bill_ID = default(int);
					}
					this.SendPropertyChanged("Import_Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Detail_Import_Bill", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Detail_Import_Bills.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Detail_Import_Bills.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Details_Bill")]
	public partial class Details_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bill_ID;
		
		private string _Product_ID;
		
		private int _Quantity;
		
		private decimal _Total_Detail;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBill_IDChanging(int value);
    partial void OnBill_IDChanged();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotal_DetailChanging(decimal value);
    partial void OnTotal_DetailChanged();
    #endregion
		
		public Details_Bill()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Detail", DbType="Money NOT NULL")]
		public decimal Total_Detail
		{
			get
			{
				return this._Total_Detail;
			}
			set
			{
				if ((this._Total_Detail != value))
				{
					this.OnTotal_DetailChanging(value);
					this.SendPropertyChanging();
					this._Total_Detail = value;
					this.SendPropertyChanged("Total_Detail");
					this.OnTotal_DetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Details_Bill", Storage="_Bill", ThisKey="Bill_ID", OtherKey="Bill_ID", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.Details_Bills.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.Details_Bills.Add(this);
						this._Bill_ID = value.Bill_ID;
					}
					else
					{
						this._Bill_ID = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Details_Bill", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Details_Bills.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Details_Bills.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback
	{
		
		private string _Title;
		
		private string _Description;
		
		public Feedback()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Footer")]
	public partial class Footer
	{
		
		private System.Nullable<char> _Description;
		
		public Footer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Char(1)")]
		public System.Nullable<char> Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gif")]
	public partial class Gif : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Product_ID;
		
		private string _Promotion_ID;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Promotion> _Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    partial void OnPromotion_IDChanging(string value);
    partial void OnPromotion_IDChanged();
    #endregion
		
		public Gif()
		{
			this._Product = default(EntityRef<Product>);
			this._Promotion = default(EntityRef<Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Promotion_ID
		{
			get
			{
				return this._Promotion_ID;
			}
			set
			{
				if ((this._Promotion_ID != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotion_IDChanging(value);
					this.SendPropertyChanging();
					this._Promotion_ID = value;
					this.SendPropertyChanged("Promotion_ID");
					this.OnPromotion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Gif", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Gifs.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Gifs.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_Gif", Storage="_Promotion", ThisKey="Promotion_ID", OtherKey="Promotion_ID", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.Gifs.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.Gifs.Add(this);
						this._Promotion_ID = value.Promotion_ID;
					}
					else
					{
						this._Promotion_ID = default(string);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_store")]
	public partial class Image_store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Image_Name;
		
		private string _URL;
		
		private string _Product_ID;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImage_NameChanging(string value);
    partial void OnImage_NameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    #endregion
		
		public Image_store()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Image_Name
		{
			get
			{
				return this._Image_Name;
			}
			set
			{
				if ((this._Image_Name != value))
				{
					this.OnImage_NameChanging(value);
					this.SendPropertyChanging();
					this._Image_Name = value;
					this.SendPropertyChanged("Image_Name");
					this.OnImage_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10)")]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Image_store", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Image_stores.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Image_stores.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Import_Bill")]
	public partial class Import_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bill_ID;
		
		private string _Provider_ID;
		
		private System.DateTime _Date;
		
		private decimal _Total;
		
		private EntitySet<Detail_Import_Bill> _Detail_Import_Bills;
		
		private EntityRef<Provider> _Provider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBill_IDChanging(int value);
    partial void OnBill_IDChanged();
    partial void OnProvider_IDChanging(string value);
    partial void OnProvider_IDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    #endregion
		
		public Import_Bill()
		{
			this._Detail_Import_Bills = new EntitySet<Detail_Import_Bill>(new Action<Detail_Import_Bill>(this.attach_Detail_Import_Bills), new Action<Detail_Import_Bill>(this.detach_Detail_Import_Bills));
			this._Provider = default(EntityRef<Provider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bill_ID
		{
			get
			{
				return this._Bill_ID;
			}
			set
			{
				if ((this._Bill_ID != value))
				{
					this.OnBill_IDChanging(value);
					this.SendPropertyChanging();
					this._Bill_ID = value;
					this.SendPropertyChanged("Bill_ID");
					this.OnBill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Provider_ID
		{
			get
			{
				return this._Provider_ID;
			}
			set
			{
				if ((this._Provider_ID != value))
				{
					if (this._Provider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvider_IDChanging(value);
					this.SendPropertyChanging();
					this._Provider_ID = value;
					this.SendPropertyChanged("Provider_ID");
					this.OnProvider_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Import_Bill_Detail_Import_Bill", Storage="_Detail_Import_Bills", ThisKey="Bill_ID", OtherKey="Bill_ID")]
		public EntitySet<Detail_Import_Bill> Detail_Import_Bills
		{
			get
			{
				return this._Detail_Import_Bills;
			}
			set
			{
				this._Detail_Import_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_Import_Bill", Storage="_Provider", ThisKey="Provider_ID", OtherKey="Provider_ID", IsForeignKey=true)]
		public Provider Provider
		{
			get
			{
				return this._Provider.Entity;
			}
			set
			{
				Provider previousValue = this._Provider.Entity;
				if (((previousValue != value) 
							|| (this._Provider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provider.Entity = null;
						previousValue.Import_Bills.Remove(this);
					}
					this._Provider.Entity = value;
					if ((value != null))
					{
						value.Import_Bills.Add(this);
						this._Provider_ID = value.Provider_ID;
					}
					else
					{
						this._Provider_ID = default(string);
					}
					this.SendPropertyChanged("Provider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detail_Import_Bills(Detail_Import_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Import_Bill = this;
		}
		
		private void detach_Detail_Import_Bills(Detail_Import_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Import_Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Info")]
	public partial class Info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Info_ID;
		
		private string _Title;
		
		private string _Description;
		
		private System.DateTime _Time;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInfo_IDChanging(int value);
    partial void OnInfo_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public Info()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Info_ID
		{
			get
			{
				return this._Info_ID;
			}
			set
			{
				if ((this._Info_ID != value))
				{
					this.OnInfo_IDChanging(value);
					this.SendPropertyChanging();
					this._Info_ID = value;
					this.SendPropertyChanged("Info_ID");
					this.OnInfo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Info_Product", Storage="_Products", ThisKey="Info_ID", OtherKey="Info_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Info = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logo")]
	public partial class Logo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Image_Name;
		
		private string _URL;
		
		private string _Link_homepage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImage_NameChanging(string value);
    partial void OnImage_NameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnLink_homepageChanging(string value);
    partial void OnLink_homepageChanged();
    #endregion
		
		public Logo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Image_Name
		{
			get
			{
				return this._Image_Name;
			}
			set
			{
				if ((this._Image_Name != value))
				{
					this.OnImage_NameChanging(value);
					this.SendPropertyChanging();
					this._Image_Name = value;
					this.SendPropertyChanged("Image_Name");
					this.OnImage_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link_homepage", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Link_homepage
		{
			get
			{
				return this._Link_homepage;
			}
			set
			{
				if ((this._Link_homepage != value))
				{
					this.OnLink_homepageChanging(value);
					this.SendPropertyChanging();
					this._Link_homepage = value;
					this.SendPropertyChanged("Link_homepage");
					this.OnLink_homepageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Policy_delivery")]
	public partial class Policy_delivery
	{
		
		private string _Description;
		
		public Policy_delivery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Product_ID;
		
		private string _Product_Name;
		
		private int _Unit_ID;
		
		private string _Provider_ID;
		
		private string _Catagory_ID;
		
		private decimal _Cost;
		
		private decimal _Wholesale;
		
		private decimal _Quantity;
		
		private System.Nullable<int> _Info_ID;
		
		private EntitySet<Detail_Import_Bill> _Detail_Import_Bills;
		
		private EntitySet<Details_Bill> _Details_Bills;
		
		private EntitySet<Gif> _Gifs;
		
		private EntitySet<Image_store> _Image_stores;
		
		private EntitySet<Promotion> _Promotions;
		
		private EntityRef<Rating> _Rating;
		
		private EntityRef<Catagory> _Catagory;
		
		private EntityRef<Info> _Info;
		
		private EntityRef<Unit> _Unit;
		
		private EntityRef<Provider> _Provider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    partial void OnProduct_NameChanging(string value);
    partial void OnProduct_NameChanged();
    partial void OnUnit_IDChanging(int value);
    partial void OnUnit_IDChanged();
    partial void OnProvider_IDChanging(string value);
    partial void OnProvider_IDChanged();
    partial void OnCatagory_IDChanging(string value);
    partial void OnCatagory_IDChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnWholesaleChanging(decimal value);
    partial void OnWholesaleChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnInfo_IDChanging(System.Nullable<int> value);
    partial void OnInfo_IDChanged();
    #endregion
		
		public Product()
		{
			this._Detail_Import_Bills = new EntitySet<Detail_Import_Bill>(new Action<Detail_Import_Bill>(this.attach_Detail_Import_Bills), new Action<Detail_Import_Bill>(this.detach_Detail_Import_Bills));
			this._Details_Bills = new EntitySet<Details_Bill>(new Action<Details_Bill>(this.attach_Details_Bills), new Action<Details_Bill>(this.detach_Details_Bills));
			this._Gifs = new EntitySet<Gif>(new Action<Gif>(this.attach_Gifs), new Action<Gif>(this.detach_Gifs));
			this._Image_stores = new EntitySet<Image_store>(new Action<Image_store>(this.attach_Image_stores), new Action<Image_store>(this.detach_Image_stores));
			this._Promotions = new EntitySet<Promotion>(new Action<Promotion>(this.attach_Promotions), new Action<Promotion>(this.detach_Promotions));
			this._Rating = default(EntityRef<Rating>);
			this._Catagory = default(EntityRef<Catagory>);
			this._Info = default(EntityRef<Info>);
			this._Unit = default(EntityRef<Unit>);
			this._Provider = default(EntityRef<Provider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Product_Name
		{
			get
			{
				return this._Product_Name;
			}
			set
			{
				if ((this._Product_Name != value))
				{
					this.OnProduct_NameChanging(value);
					this.SendPropertyChanging();
					this._Product_Name = value;
					this.SendPropertyChanged("Product_Name");
					this.OnProduct_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_ID", DbType="Int NOT NULL")]
		public int Unit_ID
		{
			get
			{
				return this._Unit_ID;
			}
			set
			{
				if ((this._Unit_ID != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit_IDChanging(value);
					this.SendPropertyChanging();
					this._Unit_ID = value;
					this.SendPropertyChanged("Unit_ID");
					this.OnUnit_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Provider_ID
		{
			get
			{
				return this._Provider_ID;
			}
			set
			{
				if ((this._Provider_ID != value))
				{
					if (this._Provider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvider_IDChanging(value);
					this.SendPropertyChanging();
					this._Provider_ID = value;
					this.SendPropertyChanged("Provider_ID");
					this.OnProvider_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catagory_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Catagory_ID
		{
			get
			{
				return this._Catagory_ID;
			}
			set
			{
				if ((this._Catagory_ID != value))
				{
					if (this._Catagory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatagory_IDChanging(value);
					this.SendPropertyChanging();
					this._Catagory_ID = value;
					this.SendPropertyChanged("Catagory_ID");
					this.OnCatagory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wholesale", DbType="Decimal(18,0) NOT NULL")]
		public decimal Wholesale
		{
			get
			{
				return this._Wholesale;
			}
			set
			{
				if ((this._Wholesale != value))
				{
					this.OnWholesaleChanging(value);
					this.SendPropertyChanging();
					this._Wholesale = value;
					this.SendPropertyChanged("Wholesale");
					this.OnWholesaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(7,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info_ID", DbType="Int")]
		public System.Nullable<int> Info_ID
		{
			get
			{
				return this._Info_ID;
			}
			set
			{
				if ((this._Info_ID != value))
				{
					if (this._Info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInfo_IDChanging(value);
					this.SendPropertyChanging();
					this._Info_ID = value;
					this.SendPropertyChanged("Info_ID");
					this.OnInfo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Detail_Import_Bill", Storage="_Detail_Import_Bills", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Detail_Import_Bill> Detail_Import_Bills
		{
			get
			{
				return this._Detail_Import_Bills;
			}
			set
			{
				this._Detail_Import_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Details_Bill", Storage="_Details_Bills", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Details_Bill> Details_Bills
		{
			get
			{
				return this._Details_Bills;
			}
			set
			{
				this._Details_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Gif", Storage="_Gifs", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Gif> Gifs
		{
			get
			{
				return this._Gifs;
			}
			set
			{
				this._Gifs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Image_store", Storage="_Image_stores", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Image_store> Image_stores
		{
			get
			{
				return this._Image_stores;
			}
			set
			{
				this._Image_stores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Promotion", Storage="_Promotions", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Promotion> Promotions
		{
			get
			{
				return this._Promotions;
			}
			set
			{
				this._Promotions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Rating", Storage="_Rating", ThisKey="Product_ID", OtherKey="Product_ID", IsUnique=true, IsForeignKey=false)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.Product = null;
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.Product = this;
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catagory_Product", Storage="_Catagory", ThisKey="Catagory_ID", OtherKey="Catagory_ID", IsForeignKey=true)]
		public Catagory Catagory
		{
			get
			{
				return this._Catagory.Entity;
			}
			set
			{
				Catagory previousValue = this._Catagory.Entity;
				if (((previousValue != value) 
							|| (this._Catagory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catagory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Catagory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Catagory_ID = value.Catagory_ID;
					}
					else
					{
						this._Catagory_ID = default(string);
					}
					this.SendPropertyChanged("Catagory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Info_Product", Storage="_Info", ThisKey="Info_ID", OtherKey="Info_ID", IsForeignKey=true)]
		public Info Info
		{
			get
			{
				return this._Info.Entity;
			}
			set
			{
				Info previousValue = this._Info.Entity;
				if (((previousValue != value) 
							|| (this._Info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Info.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Info.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Info_ID = value.Info_ID;
					}
					else
					{
						this._Info_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Info");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Unit", ThisKey="Unit_ID", OtherKey="Unit_ID", IsForeignKey=true)]
		public Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Unit_ID = value.Unit_ID;
					}
					else
					{
						this._Unit_ID = default(int);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_Product", Storage="_Provider", ThisKey="Provider_ID", OtherKey="Provider_ID", IsForeignKey=true)]
		public Provider Provider
		{
			get
			{
				return this._Provider.Entity;
			}
			set
			{
				Provider previousValue = this._Provider.Entity;
				if (((previousValue != value) 
							|| (this._Provider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provider.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Provider.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Provider_ID = value.Provider_ID;
					}
					else
					{
						this._Provider_ID = default(string);
					}
					this.SendPropertyChanged("Provider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detail_Import_Bills(Detail_Import_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Detail_Import_Bills(Detail_Import_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Gifs(Gif entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Gifs(Gif entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Image_stores(Image_store entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Image_stores(Image_store entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Promotions(Promotion entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Promotions(Promotion entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotion")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Promotion_ID;
		
		private int _Sale__;
		
		private bool _Check_Gif;
		
		private string _Product_ID;
		
		private EntitySet<Gif> _Gifs;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotion_IDChanging(string value);
    partial void OnPromotion_IDChanged();
    partial void OnSale__Changing(int value);
    partial void OnSale__Changed();
    partial void OnCheck_GifChanging(bool value);
    partial void OnCheck_GifChanged();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    #endregion
		
		public Promotion()
		{
			this._Gifs = new EntitySet<Gif>(new Action<Gif>(this.attach_Gifs), new Action<Gif>(this.detach_Gifs));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Promotion_ID
		{
			get
			{
				return this._Promotion_ID;
			}
			set
			{
				if ((this._Promotion_ID != value))
				{
					this.OnPromotion_IDChanging(value);
					this.SendPropertyChanging();
					this._Promotion_ID = value;
					this.SendPropertyChanged("Promotion_ID");
					this.OnPromotion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale__", DbType="Int NOT NULL")]
		public int Sale__
		{
			get
			{
				return this._Sale__;
			}
			set
			{
				if ((this._Sale__ != value))
				{
					this.OnSale__Changing(value);
					this.SendPropertyChanging();
					this._Sale__ = value;
					this.SendPropertyChanged("Sale__");
					this.OnSale__Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Check_Gif", DbType="Bit NOT NULL")]
		public bool Check_Gif
		{
			get
			{
				return this._Check_Gif;
			}
			set
			{
				if ((this._Check_Gif != value))
				{
					this.OnCheck_GifChanging(value);
					this.SendPropertyChanging();
					this._Check_Gif = value;
					this.SendPropertyChanged("Check_Gif");
					this.OnCheck_GifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_Gif", Storage="_Gifs", ThisKey="Promotion_ID", OtherKey="Promotion_ID")]
		public EntitySet<Gif> Gifs
		{
			get
			{
				return this._Gifs;
			}
			set
			{
				this._Gifs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Promotion", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Promotions.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Promotions.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gifs(Gif entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_Gifs(Gif entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Providers")]
	public partial class Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Provider_ID;
		
		private string _Provider_Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Email;
		
		private EntitySet<Import_Bill> _Import_Bills;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvider_IDChanging(string value);
    partial void OnProvider_IDChanged();
    partial void OnProvider_NameChanging(string value);
    partial void OnProvider_NameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Provider()
		{
			this._Import_Bills = new EntitySet<Import_Bill>(new Action<Import_Bill>(this.attach_Import_Bills), new Action<Import_Bill>(this.detach_Import_Bills));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Provider_ID
		{
			get
			{
				return this._Provider_ID;
			}
			set
			{
				if ((this._Provider_ID != value))
				{
					this.OnProvider_IDChanging(value);
					this.SendPropertyChanging();
					this._Provider_ID = value;
					this.SendPropertyChanged("Provider_ID");
					this.OnProvider_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Provider_Name
		{
			get
			{
				return this._Provider_Name;
			}
			set
			{
				if ((this._Provider_Name != value))
				{
					this.OnProvider_NameChanging(value);
					this.SendPropertyChanging();
					this._Provider_Name = value;
					this.SendPropertyChanged("Provider_Name");
					this.OnProvider_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_Import_Bill", Storage="_Import_Bills", ThisKey="Provider_ID", OtherKey="Provider_ID")]
		public EntitySet<Import_Bill> Import_Bills
		{
			get
			{
				return this._Import_Bills;
			}
			set
			{
				this._Import_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_Product", Storage="_Products", ThisKey="Provider_ID", OtherKey="Provider_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Import_Bills(Import_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Provider = this;
		}
		
		private void detach_Import_Bills(Import_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Provider = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Provider = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Provider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Product_ID;
		
		private System.Nullable<double> _Star;
		
		private System.Nullable<int> _View;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(string value);
    partial void OnProduct_IDChanged();
    partial void OnStarChanging(System.Nullable<double> value);
    partial void OnStarChanged();
    partial void OnViewChanging(System.Nullable<int> value);
    partial void OnViewChanged();
    #endregion
		
		public Rating()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Star", DbType="Float")]
		public System.Nullable<double> Star
		{
			get
			{
				return this._Star;
			}
			set
			{
				if ((this._Star != value))
				{
					this.OnStarChanging(value);
					this.SendPropertyChanging();
					this._Star = value;
					this.SendPropertyChanged("Star");
					this.OnStarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[View]", Storage="_View", DbType="Int")]
		public System.Nullable<int> View
		{
			get
			{
				return this._View;
			}
			set
			{
				if ((this._View != value))
				{
					this.OnViewChanging(value);
					this.SendPropertyChanging();
					this._View = value;
					this.SendPropertyChanged("View");
					this.OnViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Rating", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Rating = null;
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Rating = this;
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slider")]
	public partial class Slider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Image_Name;
		
		private string _URL;
		
		private string _Link_page;
		
		private string _Title;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImage_NameChanging(string value);
    partial void OnImage_NameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnLink_pageChanging(string value);
    partial void OnLink_pageChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Slider()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Image_Name
		{
			get
			{
				return this._Image_Name;
			}
			set
			{
				if ((this._Image_Name != value))
				{
					this.OnImage_NameChanging(value);
					this.SendPropertyChanging();
					this._Image_Name = value;
					this.SendPropertyChanged("Image_Name");
					this.OnImage_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link_page", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Link_page
		{
			get
			{
				return this._Link_page;
			}
			set
			{
				if ((this._Link_page != value))
				{
					this.OnLink_pageChanging(value);
					this.SendPropertyChanging();
					this._Link_page = value;
					this.SendPropertyChanged("Link_page");
					this.OnLink_pageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Staff_ID;
		
		private string _Name;
		
		private string _Sex;
		
		private string _Phone;
		
		private string _Address;
		
		private EntitySet<Delivery> _Deliveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Staff()
		{
			this._Deliveries = new EntitySet<Delivery>(new Action<Delivery>(this.attach_Deliveries), new Action<Delivery>(this.detach_Deliveries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Delivery", Storage="_Deliveries", ThisKey="Staff_ID", OtherKey="Staff_ID")]
		public EntitySet<Delivery> Deliveries
		{
			get
			{
				return this._Deliveries;
			}
			set
			{
				this._Deliveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Deliveries(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Deliveries(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Style")]
	public partial class Style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Style_ID;
		
		private string _Catagory_ID;
		
		private string _Style_name;
		
		private EntityRef<Catagory> _Catagory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStyle_IDChanging(string value);
    partial void OnStyle_IDChanged();
    partial void OnCatagory_IDChanging(string value);
    partial void OnCatagory_IDChanged();
    partial void OnStyle_nameChanging(string value);
    partial void OnStyle_nameChanged();
    #endregion
		
		public Style()
		{
			this._Catagory = default(EntityRef<Catagory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style_ID", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Style_ID
		{
			get
			{
				return this._Style_ID;
			}
			set
			{
				if ((this._Style_ID != value))
				{
					this.OnStyle_IDChanging(value);
					this.SendPropertyChanging();
					this._Style_ID = value;
					this.SendPropertyChanged("Style_ID");
					this.OnStyle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catagory_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Catagory_ID
		{
			get
			{
				return this._Catagory_ID;
			}
			set
			{
				if ((this._Catagory_ID != value))
				{
					if (this._Catagory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatagory_IDChanging(value);
					this.SendPropertyChanging();
					this._Catagory_ID = value;
					this.SendPropertyChanged("Catagory_ID");
					this.OnCatagory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Style_name
		{
			get
			{
				return this._Style_name;
			}
			set
			{
				if ((this._Style_name != value))
				{
					this.OnStyle_nameChanging(value);
					this.SendPropertyChanging();
					this._Style_name = value;
					this.SendPropertyChanged("Style_name");
					this.OnStyle_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catagory_Style", Storage="_Catagory", ThisKey="Catagory_ID", OtherKey="Catagory_ID", IsForeignKey=true)]
		public Catagory Catagory
		{
			get
			{
				return this._Catagory.Entity;
			}
			set
			{
				Catagory previousValue = this._Catagory.Entity;
				if (((previousValue != value) 
							|| (this._Catagory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catagory.Entity = null;
						previousValue.Styles.Remove(this);
					}
					this._Catagory.Entity = value;
					if ((value != null))
					{
						value.Styles.Add(this);
						this._Catagory_ID = value.Catagory_ID;
					}
					else
					{
						this._Catagory_ID = default(string);
					}
					this.SendPropertyChanged("Catagory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
